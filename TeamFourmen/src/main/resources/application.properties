# tomcat server port ì¤ì 
server.port=8081

# Data Source ê´ë ¨ ì¤ì :
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe

# ì¼ë¨ì scott/tiger
spring.datasource.username=scott
spring.datasource.password=tiger



# JPA/Hibernate ìì DDL (create, drop, alter) ë¬¸ì¥ì ìëì¼ë¡ ìì± / ì¤í.
# ì¤íë§ ë¶í¸ ì´íë¦¬ì¼ì´ìì´ ì¤íë  ë drop tableì ì¤ííê³  create tableì ì¤í
# -> ì¤ì (íì) ëìì¤ì¸ ì´íë¦¬ì¼ì´ìììë ì ëë¡ ì¬ì©íë©´ ìë¨.
# íì¤í¸ ì©ëë¡ë§ ì¬ì©
# ddl-auto = none (ê¸°ë³¸ê°)ì¼ë¡ ì¤ì íë©´ create tableì ì¤ííì§ ìì.
spring.jpa.hibernate.ddl-auto=none

# JPA/Hibernate ìì ìëì¼ë¡ ìì±ëë SQL ë¬¸ì¥ì í¬ë§·íí´ì ë¡ê·¸ë¡ ì¶ë ¥
spring.jpa.properties.hibernate.format_sql=true

# JPA/Hibernate ìì ìëì¼ë¡ ìì±ëë SQL ë¬¸ì¥ì ììì ìíì ì¶ë ¥.
spring.jpa.properties.hibernate.highlight_sql=true

# Hibernateì ë¡ê·¸ ë ë²¨ì ì¤ì .
# (trace < debug < info < warn < error < fatal)
logging.level.org.hibernate.SQL=debug

# PreparedStateì ë°ì¸ë© íë¼ë¯¸í° ìì/ê°ì ë¡ê·¸ë¡ ì¶ë ¥íê¸° ìí´ì
logging.level.org.hibernate.orm.jdbc.bind=trace

# spring securityì ë¡ê·¸ ë ë²¨ì ì¤ì 
logging.level.org.springframework.security=debug


spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# GMail 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=wlgh9770@gmail.com
spring.mail.password=rzju hzok gfbv nhwe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#문자 메세지 전송
coolsms.api.key="your API Key"
coolsms.api.secret="your API Secret"

#kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=	1b10b82f3563f31a47b250b62ca94db6
spring.security.oauth2.client.registration.kakao.client-secret=dYcrE7WnyCZLPIEws9kBZl8kzwNMWw9B
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

#kakao OAuth2 provider설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


#네이버 OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=NccKFQR4sIZ2_ExxYtlu
spring.security.oauth2.client.registration.naver.client-secret=QGmzlYj6eb
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email

#네이버 OAuth2 provider설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

secret-key=ThisStatementIsJwtSecretKeyDoNotUseThisStatement